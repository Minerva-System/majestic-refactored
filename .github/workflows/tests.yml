name: Tests

on:
  push:
    branches:
      - master
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: automated-tests
    steps:
      - name: Setup | Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup | Install Rust toolchain
        uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: 1.65.0
          components: clippy, rustfmt
          
      - name: Setup | Rust build cache
        uses: Swatinem/rust-cache@v2
        
      - name: Setup | Setup Sonar Scanner
        uses: warchant/setup-sonar-scanner@v3
        
      - name: Analysis | Code formatter
        run: cargo fmt -- --check

      - name: Analysis | Clippy
        run: cargo clippy -- -D clippy::all &> ./clippy.report
        continue-on-error: true
        env:
          RUSTFLAGS: -D warnings

      - name: Tests | Run unit tests
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--skip-clean -t 1200 --out Lcov -- --test-threads 1'

      - name: Setup | Connect to Tailnet
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: Setup | Remove unused files
        run: rm -f ./cobertura.xml

      - name: Analysis | SonarQube Scan
        run: |
          sonar-scanner \
          -Dsonar.sources=$GITHUB_WORKSPACE \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Analysis | Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
